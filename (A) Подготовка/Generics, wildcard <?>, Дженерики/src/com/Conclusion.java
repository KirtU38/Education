package com;

public class Conclusion {
}
// Generic - это средство языка позволяющее реализовать обобщенное програмирование.

// Все Дженерики нужны только Компилятору, в Рантайме они стираются.

// type safety - обобщение обеспечивает нам безопасность типов, то есть в Лист<Стрингов> теперь нельзя случайно
// добавить число, что приведет к ошибке рано или поздно.

// wildcards - знак, передающийся в тип параметра.

// <Тип внутри> - называется element type("тип элементов") или type parameter("параметр типа").

// void print(List collection) - этот код означает "Принять Обьект Класса List или наследника List"
// void print(List<Object> collection) - этот код означает "Принять Обьект Класса List<Object> или наследника
// ИМЕННО List<Object> "

// Поэтому код:
// List<String> listOfStrings = new ArrayList<>();
// print(listOfStrings)

// Не сработает, потому что хоть String и наследник Object, однако именно List<String> это НЕ наследник List<Object>

// "В List<String> мы передаём в параметр типа Класс String, значит типом элементов в этом Листе будут Обьекты Класса String"
// <> - параметр типа
// String - тип элементов