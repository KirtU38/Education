public class Result {}

// ArrayList лучше для всех операций - в середине Листа
// Сильное место - конец листа
// Слабое место - начало листа

// LinkedList лучше для всех операций - в начале листа
// Сильное место - начало и конец(но у ArrayList конец быстрее)
// Слабое место - середина листа




// Это потому что у ArrayList под копотом обычный array[], который он вручную расширяет при необходимости, из-за этого,
// если операция модификации add(), remove() происходят вначале листа, ему приходится копировать все элементы в новый лист

// У LinkedList под копотом Doubly-linked-list, что означает у каждого элемента если инфа о следующем и предыдущем
// элементе, он хранит внутри Nodes, если ArrayList работает с реальнымм массивом, то работа LinkedList сводится к
// изменения ссылок, что делает операции add(), remove() в начале и в конце очень быстрыми, однако все операции get()
// медленными, тк ему приходится искать по цепочке элемент, чтобы получить его, особенно это плохо если элемент в середине

// У LinkedList не initial capacity или вообще лимита по размеру, он можн осказать бесконечен